AWSTemplateFormatVersion: 2010-09-09
Description: S3 / Route53 / CloudFront CloudFormation configuration
Parameters:
  Env:
    Type: String
    Default: develop
    AllowedValues:
      - develop
      - qa
      - staging
      - prod
    Description: 'Define the environment to deploy. Accepted values are "develop", "qa", "staging" and "production"'
  AwsRoute53CloudFrontHostedZoneId:
    Type: String
    Default: Z2FDTNDATAQYW2
    Description: CloudFront resources HostedZoneId
  CertificateArn:
    Type: String
    Default: certificate-arn-here
    Description: AWS Certificate Manager ARN
Mappings:
  EnvironmentMaps:
    develop:
      'CloudFrontPriceClass': PriceClass_100
      'Domain': sean-react-template-dev.app.com
      'Route53HostedZoneName': app.com
      'S3BucketName': sean-react-template-dev
    qa:
      'CloudFrontPriceClass': PriceClass_200
      'Domain': sean-react-template-qa.app.com
      'Route53HostedZoneName': app.com
      'S3BucketName': sean-react-template-qa
    staging:
      'CloudFrontPriceClass': PriceClass_200
      'Domain': sean-react-template-staging.app.com
      'Route53HostedZoneName': app.com
      'S3BucketName': sean-react-template-staging
    production:
      'CloudFrontPriceClass': PriceClass_All
      'Domain': sean-react-template.app.com
      'Route53HostedZoneName': app.com
      'S3BucketName': sean-react-template
Resources:
  CloudFrontIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment:
          !Join [
            '',
            ['Sean React Template (', !Ref Env, ') Origin Access Identity'],
          ]
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !FindInMap [EnvironmentMaps, !Ref Env, 'S3BucketName']
  CloudFront:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !FindInMap [EnvironmentMaps, !Ref Env, 'Domain']
        Comment: !Join ['', ['Sean React Template ', !Ref Env]]
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: True
          TargetOriginId:
            !Join [
              '',
              [
                'S3-origin-',
                !FindInMap [EnvironmentMaps, !Ref Env, 'S3BucketName'],
              ],
            ]
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: True
        HttpVersion: http2
        IPV6Enabled: True
        Origins:
          - DomainName: !GetAtt S3Bucket.RegionalDomainName
            Id:
              !Join [
                '',
                [
                  'S3-origin-',
                  !FindInMap [EnvironmentMaps, !Ref Env, 'S3BucketName'],
                ],
              ]
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontIdentity}'
        PriceClass:
          !FindInMap [EnvironmentMaps, !Ref Env, 'CloudFrontPriceClass']
        # ViewerCertificate:
        #   AcmCertificateArn: !Ref CertificateArn
        #   MinimumProtocolVersion: TLSv1.2_2018
        #   SslSupportMethod: sni-only
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Principal:
              AWS:
                !Join [
                  '',
                  [
                    'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ',
                    !Ref CloudFrontIdentity,
                  ],
                ]
            Resource: !Join ['', ['arn:aws:s3:::', !Ref S3Bucket, '/*']]
        Version: '2012-10-17'
  Route53:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt CloudFront.DomainName
        EvaluateTargetHealth: False
        HostedZoneId: !Ref AwsRoute53CloudFrontHostedZoneId
      Comment: !Join ['', ['Sean React Template ', !Ref Env, ' Route']]
      HostedZoneName:
        !FindInMap [EnvironmentMaps, !Ref Env, 'Route53HostedZoneName']
      Name: !FindInMap [EnvironmentMaps, !Ref Env, 'Domain']
      Type: A
Outputs:
  Route53URL:
    Value: !Ref Route53
    Description: 'App URL'
  CloudFrontURL:
    Value: !GetAtt CloudFront.DomainName
    Description: 'CloudFront URL'
